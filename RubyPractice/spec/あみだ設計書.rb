# 1行目では縦線の長さL、縦線の本数n、横線の本数mがこの順で半角スペース区切りで与えられます。
# 2行目からm+1行目までのi+1行目では、a_i、b_i、c_iがこの順で半角スペース区切りで与えられます。
# 入力される値は全て整数です。入力最終行は改行コードは入りません。
# 文字列は標準入力から渡されます。



# 7 4 5　L(縦線の長さ)=7、n(縦線の本数)=4、m(横線の本数)=5
# 1 3 1  1番目の横線　1番目の縦線の上から3cmの位置から、2番目の縦線の上から1cmの位置に線が引かれる
# 3 2 2  2番目の横線　3番目の縦線の上から2cmの位置から、4番目の縦線の上から2cmの位置に線が引かれる

#方針
#入力値を受け取る
#あみだくじの地図を作る
#ユーザーの初期位置をセットする（ユーザーの初期位置と現在位置は分けて考える）
#ユーザーの移動を行う
#ゴールに到着したか判定する
#ゴールに到着していない場合はユーザーの移動を行う
#到着していたら目標のゴールか判定を行う
#目標のゴールであるか判定を行う
#目標のゴールである場合はinitial_xを返す
#そうでない場合はユーザー初期位置のセットからやりなおし



#インターフェイス役(AmidaInput)
#入力値を受け取る
#あみだくじの地図オブジェクトを作る（情報保持役）
#ユーザーの初期位置と現在位置のオブジェクトを作る(サービス提供役)
#制御役にあみだくじオブジェクトとユーザーオブジェクトを渡して判定を委譲させる

#あみだくじの地図役
#あみだくじの地図情報を持つ
#制御役に情報を提供する作業のみ行う
#地図役は複数の横線クラスによって構成されるコンポジットとして扱う
#横線クラスのコレクションからx軸が一致している横線クラスを選び出し、その中でもxよりも大きくなおかつ差が最も近いyを持つ横線を返す
#コレクションの数を数えて返す

#横線クラスは情報保持役
#左側の接点と右側の接点についてそれぞれx位置とy位置を持っている
#横線の左右両方の接点の値を返す

#ユーザーオブジェクト（サービス提供役）
#ユーザーの初期位置とユーザーの現在位置の情報を持つ
#ユーザーの現在位置の変更、提供を行う
#ユーザーの初期位置の提供を行う


#判断役　マップオブジェクトとユーザーの現在位置情報のオブジェクトを持つ
#地図とユーザーオブジェクトを持っている
#ゲームの進行管理を行う、具体的には
#地図とユーザーを使ってゴールに到着したか判定を行う
#ユーザーの移動の指示を行う(地図役がユーザーの現在位置をもとに返された横線情報をもとに、ユーザーに移動の指示を行う)
#ゴールに到着していない場合は再度ユーザーの移動を行う
#到着していたら目標のゴールか判定を行う
#目標のゴールである場合はユーザーに初期位置を返させる
#そうでない場合はユーザーオブジェクトを破棄して新規データを入力して再度実行する


